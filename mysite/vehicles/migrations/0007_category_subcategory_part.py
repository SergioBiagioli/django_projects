# Generated by Django 4.2.7 on 2024-05-26 02:37

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('vehicles', '0006_alter_aplication_segment_alter_segment_segment'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text='Enter a category (e.g. Engine, Frame, Suspension..)', max_length=200, validators=[django.core.validators.MinLengthValidator(2, 'Categories must be greater than 1 characters')])),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcategory', models.CharField(help_text='Enter a sub-category (e.g. Cylinder, Rear Brake, Front Suspension..)', max_length=200, validators=[django.core.validators.MinLengthValidator(2, 'Sub-Categories must be greater than 1 characters')])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='vehicles.category')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_subcategories', to='vehicles.subcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the general part name (e.g. Spark Plug)', max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'Part name must be greater than 1 character')])),
                ('description', models.TextField(blank=True, null=True)),
                ('applications', models.ManyToManyField(related_name='parts', to='vehicles.aplication')),
                ('categories', models.ManyToManyField(related_name='parts', to='vehicles.category')),
                ('subcategories', models.ManyToManyField(blank=True, related_name='parts', to='vehicles.subcategory')),
            ],
        ),
    ]
